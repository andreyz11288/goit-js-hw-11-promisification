{"version":3,"sources":["js/task3.js"],"names":["randomIntegerFromInterval","min","max","Math","floor","random","makeTransaction","transaction","onSuccess","onError","Promise","resolve","reject","delay","setTimeout","canProcess","id","time","logSuccess","console","log","logError","warn","amount","then","catch"],"mappings":";AACA,IAAMA,EAA4B,SAACC,EAAKC,GAC/BC,OAAAA,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,GAAKA,IAGhDK,EAAkB,SAACC,EAAaC,EAAWC,GAEtC,OAAA,IAAIC,QAAQ,SAACC,EAASC,GACnBC,IAAAA,EAAQb,EAA0B,IAAK,KAC7Cc,WAAW,WACDC,IAAAA,EAAaZ,KAAKE,SAAW,GAE7BW,GADcT,EAAYS,GACrBT,EAAYS,IAEnBD,EACAJ,EAAQ,CAAEK,GAAAA,EAAIC,KAFLJ,IAITD,EAAOI,IAGZH,MAKLK,EAAa,SAAgB,GAAdF,IAAAA,EAAAA,EAAAA,GAAIC,EAAAA,EAAAA,KACvBE,QAAQC,IAAmBJ,eAAAA,OAAAA,EAAmBC,kBAAAA,OAAAA,EAA9C,QAGII,EAAW,SAAAL,GACfG,QAAQG,KAAqCN,gCAAAA,OAAAA,EAA7C,+BAWFV,EAAgB,CAAEU,GAAI,GAAIO,OAAQ,MAC/BC,KAAKN,GACLO,MAAMJ,GAETf,EAAgB,CAAEU,GAAI,GAAIO,OAAQ,MAC/BC,KAAKN,GACLO,MAAMJ,GAETf,EAAgB,CAAEU,GAAI,GAAIO,OAAQ,KAC/BC,KAAKN,GACLO,MAAMJ,GAETf,EAAgB,CAAEU,GAAI,GAAIO,OAAQ,MAC/BC,KAAKN,GACLO,MAAMJ","file":"task3.89365bc7.js","sourceRoot":"../src","sourcesContent":["\nconst randomIntegerFromInterval = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nconst makeTransaction = (transaction, onSuccess, onError) => {\n   \n    return new Promise((resolve, reject) => {\n        const delay = randomIntegerFromInterval(200, 500);\n        setTimeout(() => {\n            const canProcess = Math.random() > 0.3;\n            const logSuccess = (transaction.id, delay);\n            const id = transaction.id  \n            const time = delay\n            if (canProcess) {\n                resolve({ id, time });\n            } else {\n                reject(id);\n            }          \n                    \n        }, delay);\n    });\n};\n      \n\nconst logSuccess = ({id, time}) => {\n  console.log(`Transaction ${id} processed in ${time}ms`);\n};\n\nconst logError = id => {\n  console.warn(`Error processing transaction ${id}. Please try again later.`);\n};\n\n\n// makeTransaction({ id: 70, amount: 150 }, logSuccess, logError);\n// makeTransaction({ id: 71, amount: 230 }, logSuccess, logError);\n// makeTransaction({ id: 72, amount: 75 }, logSuccess, logError);\n// makeTransaction({ id: 73, amount: 100 }, logSuccess, logError);\n\n\n\nmakeTransaction({ id: 70, amount: 150 })\n  .then(logSuccess)\n  .catch(logError);\n\nmakeTransaction({ id: 71, amount: 230 })\n  .then(logSuccess)\n  .catch(logError);\n\nmakeTransaction({ id: 72, amount: 75 })\n  .then(logSuccess)\n  .catch(logError);\n\nmakeTransaction({ id: 73, amount: 100 })\n  .then(logSuccess)\n  .catch(logError);"]}