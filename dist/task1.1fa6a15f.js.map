{"version":3,"sources":["js/task1.js"],"names":["delay","ms","DELAY","Promise","resolve","setTimeout","logger","time","console","log","then"],"mappings":"AAAA,IAAMA,KAAK,GAAG,SAARA,KAAQ,CAAAC,EAAE,EAAI;AAChB,MAAMC,KAAK,GAAGD,EAAd;AAGF,SAAO,IAAIE,OAAJ,CAAY,UAACC,OAAD,EAAa;AAG9BC,IAAAA,UAAU,CAAC,YAAM;AACbD,MAAAA,OAAO,kBAAMF,KAAN,EAAP;AACH,KAFS,EAEPA,KAFO,CAAV;AAGD,GANM,CAAP;AAQD,CAZD;;AAcA,IAAMI,MAAM,GAAG,SAATA,MAAS,CAAAC,IAAI;AAAA,SAAIC,OAAO,CAACC,GAAR,0BAA8BF,IAA9B,QAAJ;AAAA,CAAnB;;AAEAP,KAAK,CAAC,IAAD,CAAL,CAAYU,IAAZ,CAAiBJ,MAAjB;AACAN,KAAK,CAAC,IAAD,CAAL,CAAYU,IAAZ,CAAiBJ,MAAjB;AACAN,KAAK,CAAC,IAAD,CAAL,CAAYU,IAAZ,CAAiBJ,MAAjB","file":"task1.1fa6a15f.js","sourceRoot":"../src","sourcesContent":["const delay = ms => {\n    const DELAY = ms;\n\n    \n  return new Promise((resolve) => {\n   \n\n    setTimeout(() => {      \n        resolve(`âœ… ${DELAY}`);      \n    }, DELAY);\n  });\n \n};\n\nconst logger = time => console.log(`Resolved after ${time}ms`);\n\ndelay(2000).then(logger); \ndelay(1000).then(logger); \ndelay(1500).then(logger); "]}